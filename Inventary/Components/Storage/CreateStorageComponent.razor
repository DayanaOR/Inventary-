@using Entities
@using Business

<EditForm Model="oStorage">
    <div class="form-group">
        <label>Bodega: </label>
        <InputSelect @bind-Value="oStorage.WareHousesId" class="form-control">
            <option value="">Seleccione una bodega...</option>
            @foreach (var WareHouse in warehouses)
            {
                <option value="@WareHouse.WarehouseId">@WareHouse.WarehouseName</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label> Producto: </label>
        <InputSelect @bind-Value="oStorage.ProductId" class="form-control">
            <option value="">Seleccione un producto...</option>
            @foreach (var product in products)
            {
                <option value="@product.ProductId">@product.ProductName</option>
            }
        </InputSelect>
    </div>
    <input type="button" value="Almacenar producto" @onclick="SaveStorage" />
</EditForm>

    <div class="text-center h4">
        @message
    </div>

@code {

    StorageEntity oStorage = new StorageEntity();

    List<WarehouseEntity> warehouses = new List<WarehouseEntity>();
    List<ProductEntity> products = new List<ProductEntity>();

    string message;

    protected override async Task OnInitializedAsync()
    {
        warehouses = B_Warehouse.WareHouseList();
        products = B_Product.ProductList();
    }
    private void SaveStorage()
    {
        oStorage.StorageId = $"{oStorage.WareHousesId}-{oStorage.ProductId}";

        if(!B_Storage.IsProductInWarehouse(oStorage.StorageId))
        {
            oStorage.LastUpDate = DateTime.Now;
            B_Storage.CreateStorage(oStorage);

            message = "Producto correctamente registrado";
        }
        else
        {
            message = "El prodcuto ya existe en la bodega";
        }

    }
}
